@2D
--track0:äpìx,-720,720,0
--track1:ï™äÑêî,1,64,10,1
--track3:ã≠Ç≥%,-100,100,0

-- local n=obj.setanchor("track",0,"arm")
local d=obj.track1*2
local st=obj.track3/100
local w,h=obj.w,obj.h
local ang=obj.track0
local t=obj.time
local i,j,k,t0,t1,x,y,af,x0,x1,y0,y1,u0,u1,v0,v1,r,dw,dh,nst0,nst1,xst0,xst1
local div={}
local isInCamera = (obj.getoption("camera_mode")<2) and true or false
log=function(s) if(obj.getinfo("saving")==false)then debug_print(s) end end
-- for k=1,n do
-- 	x,y=
-- 		obj.getvalue(0,0,k-1),
-- 		obj.getvalue(1,0,k-1)
-- 	div[k]={}
-- 	table.insert(div[k],x)
-- 	table.insert(div[k],y)
-- end
if(isInCamera) then obj.setoption("dst","tmp",obj.screen_w,obj.screen_h) end
-- for k=1,n do
-- 	t0,t1=
-- 		obj.getvalue("time",0,k-1),
-- 		obj.getvalue("time",0,k)
-- 	if(t>t0) and (t<=t1) then
-- 		af=(t-t0)/(t1-t0)
-- 		x0,x1=div[k][1],div[k+1][1]
-- 		y0,y1=div[k][2],div[k+1][2]
-- 		ang=math.deg(math.atan2(
-- 			x1*af +x0*(1-af),
-- 			y1*af +y0*(1-af)
-- 		))
-- 		r=math.sqrt((x1*af +x0*(1-af))^2+(y1*af +y0*(1-af))^2)
		test=ang
		-- log(ang)
		for i=1,d do
			for j=1,d do
				dw,dh=
					w/d,h/d

				u0,u1=
					dw*(i-1),dw*i

				v0,v1=
					dh*(j-1),dh*j

				xst0= math.abs(math.deg(math.atan2(u0,v0))-ang)
				xst0= xst0~=0 and xst0/180 or 0

				xst1= math.abs(math.deg(math.atan2(u1,v1))-ang)
				xst1= xst1~=0 and xst1/180 or 0

				-- xst0,xst1=
				r=200


				x0,x1=
					u0+math.cos(math.rad(ang))*r*xst1*st,
					u1+math.cos(math.rad(ang))*r*xst0*st

				y0,y1=
					v0+math.sin(math.rad(ang))*r*xst1*st,
					v1+math.sin(math.rad(ang))*r*xst0*st

				if(isInCamera) then obj.setoption("dst","tmp") end
				obj.drawpoly(
						x0,y0,0,
						x1,y0,0,
						x1,y1,0,
						x0,y1,0,
						u0,v0,
						u1,v0,
						u1,v1,
						u0,v1
					)
			end
		end
		if(isInCamera) then obj.load("tempbuffer") end
-- 	end
-- end

@3D