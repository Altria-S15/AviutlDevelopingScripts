----------------------------------------------------------------------------------------------------------------
@目_shaft_inside
----------------------------------------------------------------------------------------------------------------
--track0:瞳孔size,0,200,100,1
--track1:ハイライト,0,100,100
--track2:ハイライト方向,-180,180,60
--track3:全体size,0,500,250,1
--check0:保存する,0
--dialog:color/col,local color=0xffffff;瞳孔縦横比%,local eyeAsept=30;ﾊｲﾗｲﾄ縦横比%,local highAsept=40;ﾊｲﾗｲﾄ半径,local hlR=70;

require("rikky_module")

local save=obj.check0
local s=obj.track3
local af=s/250
local ps=obj.track0
local hl=obj.track1/100
local hlAng=obj.track2
local col=0xffffff
local l="layer"..obj.layer
local img="FO:"..obj.layer
local i
local ang=0.15
local n=20
local tmp={x=0,y=0,t=0}
local r=60*af
local ox,oy,oz=obj.getvalue("x"),obj.getvalue("y"),obj.getvalue("z")

local ch=function(c)
	if(c>0) then c=0 end
	return c
end
local sin,cos=function(n) return math.sin(math.rad(n)) end,function(n) return math.cos(math.rad(n)) end



--描画
obj.load("figure","円",0x0b0b0b,s+50,10)
obj.setoption("dst","tmp",s+50,s+50)
obj.draw()

obj.load("figure","円",0x0b0b0b,s)
obj.setoption("blend",0)
obj.effect("グラデーション","角度",180,"幅",s+90,"中心Y",30,"color",0xffffff,"color2",0x000000)
obj.draw()


obj.load("figure","円",0x47413d,200*af) --ハイライト
obj.effect("マスク","Y",100*af,"サイズ",s,"縦横比",-20,"type",1)
obj.setoption("blend",4)
obj.draw(0,0,0,1,hl)


obj.load("figure","円",col,100*af) --ハイライト
obj.effect("マスク","Y",100*af,"サイズ",s,"縦横比",-20,"type",1)
obj.effect("マスク","Y",0,"サイズ",100*af,"縦横比",-30,"type",1,"マスクの反転",1)
obj.setoption("blend",4)
obj.draw(0,s/8,0,1,hl)


obj.load("figure","円",0x47413d,230*af,5)
obj.setoption("blend",4)
obj.draw(0,0,0)


obj.load("figure","円",0x000000,ps*af) --瞳孔
obj.setoption("blend",0)
obj.effect("リサイズ","X",100-eyeAsept)
obj.effect("グラデーション","角度",0,"幅",200,"color",0x000000,"color2",0x585858)
obj.draw()


obj.load("figure","四角形",0x000000,20*af)
obj.effect("リサイズ","X",30)
obj.setoption("blend",5)
for i=0,n do
	tmp.t=i/n*math.pi*2+ang
	tmp.x=math.cos(tmp.t)*r
	tmp.y=math.sin(tmp.t)*r
	if(i<10) then
		obj.draw(tmp.x, 20*af+tmp.y, 0, 1,1,0,0,360/n*i+90+7.5)
	end
end


obj.setoption("blend",0)
obj.load("figure","円",0xf6efec,50*af) --ハイライト
obj.effect("リサイズ","X",100-highAsept)
obj.draw(cos(hlAng)*hlR*af,sin(hlAng)*-1*hlR*af,0,1,0.4*hl,0,0,hlAng*-1)

obj.load("tempbuffer")
obj.effect("単色化","color",color,"輝度を保持する",1)
obj.draw(ox,oy,oz)
rikky_module.image("w",img)
FO=FO or {}
if(type(FO[l])~="table") then FO[l]={} end
if(save) then
	FO[l]={id=img,isOutput=true}
	obj.alpha=0
elseif(save==0) then
	FO[l]={id=false,isOutput=false}
	obj.alpha=1
	rikky_module.image("c",img)
end

--tmp2=FO[l]["id"]
--tmp=save



----------------------------------------------------------------------------------------------------------------
@目_shaft
----------------------------------------------------------------------------------------------------------------
--track0:瞳位置X,-500,500,0
--track1:瞳位置Y,-200,200,0
--track2:まぶた度合,0,100,100
--track3:size,0,2000,800,1
--check0:読み込み,0
--dialog:color/col,local col=0xffffff;inside,local ins=obj.layer-1;瞼ぼかし,local blur=0;眉X,local brx=0;眉Y,local bry=0;眉の高さ比率,local brasp=30;眉回転,local brang=0;目頭/chk,local inceye=1;

require("rikky_module")

local ox,oy,oz=obj.getvalue("x"),obj.getvalue("y")+100,obj.getvalue("z")
local s=obj.track3
local puaf=obj.track2/100
local puuf=1-puaf
local pux,puy=obj.track0+ox,obj.track1+oy-30
local af=s/800
local coltmp={t1={},t2={},t3=0xffffff}
local l
if(ins==nil) then ins="d" end
if(type(ins)=="string") and (ins=="d") then
	l="layer"..(obj.layer-1)
else
	l="layer"..ins
end

coltmp.t1[1],coltmp.t1[2],coltmp.t1[3]=HSV(col)
local FOimg="FO:tmp"
local FOtmp="FO:eyes"

--描画
if((FO) and (type(FO[l])=="table") and (type(FO[l]["id"])=="number") and (FO[l]["isOutput"])) or (obj.check0) then

obj.setoption("dst","tmp",s*3,s*3)
coltmp.t2[1],coltmp.t2[2],coltmp.t2[3]=HSV(0x8b8b8b)
coltmp.t3=HSV(coltmp.t1[1],coltmp.t1[2],coltmp.t2[3])
obj.load("figure","円",coltmp.t3,s)
obj.effect("リサイズ","Y",70*puaf)
obj.effect("マスク","Y",-100*af,"サイズ",s,"type",1,"縦横比",-30)
obj.effect("斜めクリッピング","角度",-10,"ぼかし",blur)
obj.draw(ox,oy,oz)

obj.setoption("dst","tmp")
coltmp.t2[1],coltmp.t2[2],coltmp.t2[3]=HSV(0x3b3b3b)
coltmp.t3=HSV(coltmp.t1[1],coltmp.t1[2],coltmp.t2[3])
obj.load("figure","円",coltmp.t3,750*af)
obj.effect("リサイズ","Y",70*puaf)
obj.effect("マスク","Y",-100*af,"サイズ",750*af,"type",1,"縦横比",-30)
obj.effect("斜めクリッピング","角度",-8,"ぼかし",blur)
obj.draw(ox,oy,oz)

obj.setoption("dst","tmp")
coltmp.t2[1],coltmp.t2[2],coltmp.t2[3]=HSV(0xffffff)
coltmp.t3=HSV(coltmp.t1[1],coltmp.t1[2],coltmp.t2[3])
obj.load("figure","円",coltmp.t3,700*af)
obj.effect("リサイズ","Y",70*puaf)
obj.effect("マスク","Y",-100*af,"サイズ",700*af,"type",1,"縦横比",-30)
obj.effect("グラデーション","中心Y",-50*af,"幅",1000*af,"color",0xffffff,"color2",0xd7d7d7,"type",1)
obj.draw(ox,oy,oz)
obj.load("tempbuffer")
obj.draw()
rikky_module.image("w",FOimg)


if(FO) and (type(FO[l])=="table") and (FO[l]["isOutput"]) then --瞳描画
	obj.setoption("dst","tmp",s*2,s*2)
	rikky_module.image("r",FO[l]["id"])
	obj.draw(pux,puy)

	obj.setoption("dst","tmp")
	rikky_module.image("r",FOimg)
	obj.effect("反転","透明度反転",1)
	obj.setoption("blend","alpha_sub")
	obj.draw(ox,oy,oz)

	obj.load("tempbuffer")
	obj.draw()
	rikky_module.image("w",FOtmp)
end

--obj.setoption("dst","tmp",obj.screen_w,obj.screen_h)
rikky_module.image("r",FOimg)
obj.draw()

coltmp.t2[1],coltmp.t2[2],coltmp.t2[3]=HSV(0x6d6e6e)
coltmp.t3=HSV(coltmp.t1[1],coltmp.t1[2],coltmp.t2[3])
obj.load("figure","円",coltmp.t3,s)
obj.setoption("dst","frm")
obj.effect("リサイズ","Y",100-brasp)
obj.effect("マスク","X",30*af,"Y",50*af,"サイズ",850*af,"type",1,"縦横比",brasp*-1,"マスクの反転",1)
obj.draw(ox-25*af+brx,oy+bry-100*af,oz,1.2,1,0,0,10+brang)

coltmp.t2[1],coltmp.t2[2],coltmp.t2[3]=HSV(0x4c4c4c)
coltmp.t3=HSV(coltmp.t1[1],coltmp.t1[2],coltmp.t2[3])
obj.load("figure","円",coltmp.t3,s)
obj.effect("リサイズ","Y",100-brasp)
obj.effect("マスク","X",30*af,"Y",10*af,"サイズ",850*af,"type",1,"縦横比",brasp*-1,"マスクの反転",1)
obj.draw(ox-25*af+brx,oy+bry-40*af,oz,1.2,1,0,0,10+brang)

rikky_module.image("r",FOtmp)
obj.draw()

--rikky_module.image("c",FOtmp)
--rikky_module.image("c",FOimg)
--obj.load("tempbuffer")
--obj.draw()

if(inceye==1) then
	obj.load("figure","四角形",0xce97a8,30*af)
	obj.effect("リサイズ","Y",70)
	obj.draw(ox+330*puuf+360*puaf,oy-100+110*puuf+60*puaf,oz,1,1,0,0,15)
end

else
	obj.setfont("メイリオ",40)
	obj.load("設定されたinside欄が無効です。\nレイヤーの直前にinsideが設定されているか、\n設定したレイヤー数にinsideが設定されているか確認してください。")
	obj.draw()
end